@model BidNest.ViewModels.ItemViewModel
@{
    ViewData["Title"] = "Delete Item";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Management / Items /</span> Delete
    </h4>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0 text-danger">
                        <i class="bx bx-trash"></i> Delete Item
                    </h5>
                </div>

                <div class="card-body">
                    @if (ViewBag.CanDelete == false)
                    {
                        <div class="alert alert-danger" role="alert">
                            <h6 class="alert-heading">
                                <i class="bx bx-error"></i> Cannot Delete Item
                            </h6>
                            <p class="mb-0">
                                This item cannot be deleted because it has active bids. 
                                Items with bids will be marked as cancelled instead of being deleted to preserve auction history.
                            </p>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning" role="alert">
                            <h6 class="alert-heading">
                                <i class="bx bx-warning"></i> Confirm Deletion
                            </h6>
                            <p class="mb-0">
                                Are you sure you want to delete this item? This action cannot be undone and will permanently remove the item and all associated images.
                            </p>
                        </div>
                    }

                    <div class="item-details p-4 bg-light rounded">
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Item Name:</strong>
                            </div>
                            <div class="col-sm-8">
                                <div class="d-flex align-items-center">
                                    <i class="bx bx-package me-2"></i>
                                    @Model.Name
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Description:</strong>
                            </div>
                            <div class="col-sm-8">
                                @Model.Description
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Category:</strong>
                            </div>
                            <div class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.CategoryName))
                                {
                                    <span class="badge bg-label-info">@Model.CategoryName</span>
                                }
                                else
                                {
                                    <span class="text-muted">No Category</span>
                                }
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Seller:</strong>
                            </div>
                            <div class="col-sm-8">
                                @Model.SellerName
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Minimum Bid:</strong>
                            </div>
                            <div class="col-sm-8">
                                <strong>$@Model.MinimumBid.ToString("N2")</strong>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Current Bid:</strong>
                            </div>
                            <div class="col-sm-8">
                                @if (Model.CurrentBid.HasValue)
                                {
                                    <span class="text-success"><strong>$@Model.CurrentBid.Value.ToString("N2")</strong></span>
                                }
                                else
                                {
                                    <span class="text-muted">No bids</span>
                                }
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Total Bids:</strong>
                            </div>
                            <div class="col-sm-8">
                                <span class="badge @(Model.BidCount > 0 ? "bg-label-danger" : "bg-label-success")">
                                    @Model.BidCount
                                </span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Status:</strong>
                            </div>
                            <div class="col-sm-8">
                                <span class="badge @Model.StatusBadgeClass">@Model.StatusDisplay</span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <strong>Auction Period:</strong>
                            </div>
                            <div class="col-sm-8">
                                @Model.StartDate.ToString("MMM dd, yyyy") - @Model.EndDate.ToString("MMM dd, yyyy")
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-4">
                                <strong>Images:</strong>
                            </div>
                            <div class="col-sm-8">
                                <span class="badge bg-label-secondary">@Model.Images.Count image(s)</span>
                            </div>
                        </div>
                    </div>

                    @if (Model.Images.Any())
                    {
                        <div class="mt-4">
                            <h6>Images to be deleted:</h6>
                            <div class="row">
                                @foreach (var image in Model.Images.Take(4))
                                {
                                    <div class="col-3">
                                        <img src="@image.ImagePath" class="img-fluid rounded" style="height: 80px; object-fit: cover;" alt="Item Image">
                                    </div>
                                }
                                @if (Model.Images.Count > 4)
                                {
                                    <div class="col-3 d-flex align-items-center justify-content-center">
                                        <span class="text-muted">+@(Model.Images.Count - 4) more</span>
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <div class="mt-4">
                        @if (ViewBag.CanDelete == true)
                        {
                            <form asp-action="DeleteItem" method="post" style="display: inline;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" asp-for="ItemId">
                                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you absolutely sure you want to delete this item? This action cannot be undone.')">
                                    <i class="bx bx-trash"></i> Yes, Delete Item
                                </button>
                            </form>
                        }
                        else
                        {
                            <form asp-action="DeleteItem" method="post" style="display: inline;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" asp-for="ItemId">
                                <button type="submit" class="btn btn-warning" onclick="return confirm('This will mark the item as cancelled. Continue?')">
                                    <i class="bx bx-x-circle"></i> Mark as Cancelled
                                </button>
                            </form>
                        }
                        
                        <a href="@Url.Action("Items")" class="btn btn-outline-secondary ms-2">
                            <i class="bx bx-arrow-back"></i> Cancel
                        </a>
                        
                        <a href="@Url.Action("ItemDetails", new { id = Model.ItemId })" class="btn btn-outline-info ms-2">
                            <i class="bx bx-show"></i> View Details
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
